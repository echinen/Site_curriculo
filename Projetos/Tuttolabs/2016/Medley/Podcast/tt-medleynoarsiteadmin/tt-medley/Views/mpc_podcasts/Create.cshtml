@model tt_medley.Models.mpc_podcasts
 

@{
    ViewBag.Title = "Create";

    List<SelectListItem> listaCategoria = new List<SelectListItem>();
    foreach (var item in ViewBag.categorias){
        if (item.C__deleted == false)
        {   
            listaCategoria.Add(new SelectListItem
            {
                Text = item.nome,
                Value = item.id
            });
        }

    }

    List<SelectListItem> listaGrupo = new List<SelectListItem>();
    foreach(var item in ViewBag.grupos)
    {
        if (item.C__deleted == false)
        {
            listaGrupo.Add(new SelectListItem
            {
                Text = item.nome,
                Value = item.id
            });
        }

    }
}


@*<link rel="stylesheet" type="text/css" media="screen"
      href="http://tarruda.github.com/bootstrap-datetimepicker/assets/css/bootstrap-datetimepicker.min.css">*@
<h2>Novo podcast</h2>

 <!--@using (Html.BeginForm("Index", "mpc_podcasts", FormMethod.Post, new { enctype = "multipart/form-data" }))
 {
            <input type="file" name="file" accept=".mp3" />
            <input type="submit" value="OK" />
 }-->
@using (Html.BeginForm("Create", "mpc_podcasts", FormMethod.Post, new { enctype = "multipart/form-data", id = "newPodcast" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <!--<div class="form-group">
            @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id, "", new { @class = "text-danger" })
            </div>
        </div>-->

        
        <div class="form-group">
            <label class="control-label col-md-2">Nome</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @*<p class="text-danger">@ViewBag.errorMessagePodcast</p>*@
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Categorias</label>
            <div class="col-md-10">
                @Html.DropDownList("selectedCategory", listaCategoria, new { @class = "form-control" })
            </div>
        </div>
            
            <div class="form-group">
                <label class="control-label col-md-2">Descrição</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Patrocinador</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.patrocinador, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.patrocinador, "", new { @class = "text-danger" })
                </div>
            </div>  
        
            <div class="form-group">
                <label class="control-label col-md-2">Grupos</label>
                <div class="col-md-10">
                    @Html.DropDownList("selectedGroup", listaGrupo, new { @class = "form-control" })
                </div>
            </div>          

            @*<div class="form-group">
                <label class="control-label col-md-2">Data de lançamento</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.datalancamento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.datalancamento, "", new { @class = "text-danger" })
                </div>
            </div>*@

                
            @*<div class="form-group">
                <label class="control-label col-md-2">Tempo</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tempo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tempo, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <form id="teste">
            <div class="form-group">
                <label class="control-label col-md-2">Podcast</label>
                <div class="col-md-10">
                    <input type="file" name="file" accept=".mp3" class="form-control" id="file" />
                    <p class="text-danger">@ViewBag.errorUploadMessage</p>
                </div>
            </div>
        </form>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Adicionar" class="btn btn-primary" id="envio" />
                </div>
            </div>
        </div>

}

<div id="divProcessing">
    <p>Subindo áudio para servidor . . . <img src="../../Content/ajax-loader.gif"></p>
</div>

<div id="divResult">
</div>

<a href="@Url.Action("Index", "mpc_usuarios", null)" title="Voltar para a Lista de Podcasts" class="btn btn-info">
    <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>
    Voltar
</a>

@*@{
    var message = TempData["AlertMessage"] ?? string.Empty;
}*@

@*<script type="text/javascript">
    var message = '@message';
    if(message)
        alert(message);
</script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/datepicker")

<script type="text/javascript">

    $(document).ready(function () {

      // Hide the "busy" Gif at load:
      $("#divProcessing").hide();

      // Handle the form submit event, and make the Ajax request:
      $("#newPodcast").on("submit", function (event) {
        // Show the "busy" Gif:
          $("#divProcessing").show();
      });
    });
</script>
}

@section Style {
    <link href="@Url.Content("~/Content/jquery.datetimepicker.css")" rel="stylesheet" type="text/css" />
}

<script src="@Url.Content("~/Scripts/jquery.datetimepicker.full.min.js")" type="text/javascript"></script>
@*<script text="text/javascript">
    $(function () {
        $('#datalancamento').datetimepicker({
            format: 'd/m/Y H:i',
            dayOfWeekStart: 1,
            lang: 'pt'
        });

    });
</script>*@



